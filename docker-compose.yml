version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - old_app_frontend
      - new_app_frontend
      - old_app_backend
      - new_app_backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped

  old_app_backend:
    build:
      context: .
      dockerfile: Old_App/backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
    volumes:
      - ./Old_App/backend:/app
    restart: unless-stopped

  old_app_frontend:
    build:
      context: ./Old_App/frontend/FE
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=/old/api
    volumes:
      - ./Old_App/frontend/FE:/app
      - /app/node_modules
    depends_on:
      - old_app_backend
    restart: unless-stopped

  new_app_backend:
    build:
      context: .
      dockerfile: New_App/backend/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=production
    volumes:
      - ./New_App/backend:/app
    restart: unless-stopped

  new_app_frontend:
    build:
      context: ./New_App/frontend/FE
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=/new/api
    volumes:
      - ./New_App/frontend/FE:/app
      - /app/node_modules
    depends_on:
      - new_app_backend
    restart: unless-stopped
